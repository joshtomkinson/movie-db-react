{"version":3,"sources":["components/images/RMRT.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/GlobalStyle.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","IMAGE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImage","title","text","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledMovieThumb","MovieThumb","movieId","clickable","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setState","timeOut","useRef","name","size","placeholder","onChange","event","console","log","target","value","clearTimeout","current","setTimeout","StyledSpinner","Spinner","Home","searchItem","setSearchItem","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","res","prev","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","afterSearch","popularEnd","GlobalStyle","createGlobalStyle","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","e","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","end","creditsEnd","creditRes","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da58b2d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RMRT.99829193.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport RMDBLogo from \"../images/RMRT.png\";\r\nimport TMDBLogo from \"../images/tmdb_logo.svg\";\r\n\r\nimport {\r\n  StyledHeader,\r\n  StyledRMDBLogo,\r\n  StyledTMDBLogo,\r\n} from \"../styles/StyledHeader\";\r\n\r\nconst Header = () => (\r\n  <StyledHeader>\r\n    <div className=\"header-content\">\r\n      <Link to=\"/\">\r\n        <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\r\n      </Link>\r\n\r\n      <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\r\n    </div>\r\n  </StyledHeader>\r\n);\r\nexport default Header;\r\n","const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"506bcc29a34824139cf50d563d42edd4\";\nconst IMAGE_URL = \"http://image.tmdb.org/t/p/\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n};\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from \"react\";\r\nimport { StyledGrid, StyledGridContent } from \"../styles/StyledGrid\";\r\nimport PropTypes from 'prop-types'\r\nconst Grid = ({ header, children }) => (\r\n  <StyledGrid>\r\n    <h1>{header}</h1>\r\n    <StyledGridContent>{children}</StyledGridContent>\r\n  </StyledGrid>\r\n);\r\n\r\n//prop types to validate props\r\nGrid.propTypes = {\r\n  header:PropTypes.string,\r\n}\r\n\r\nexport default Grid;\r\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledHeroImage } from \"../styles/StyledHeroImage\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <StyledHeroImage image={image}>\r\n    <div className=\"heroimage-conent\">\r\n      <div className=\"heroimage-text\">\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  </StyledHeroImage>\r\n);\r\n\r\n//prop types to validate props\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from \"react\";\r\nimport { StyledLoadMoreBtn } from \"../styles/StyledLoadMoreBtn\";\r\nimport PropTypes from \"prop-types\";\r\nconst LoadMoreBtn = ({ text, callback }) => (\r\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n    {text}\r\n  </StyledLoadMoreBtn>\r\n);\r\n\r\n//prop types to validate props\r\nLoadMoreBtn.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateMovieThumb 0.5s;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { StyledMovieThumb } from \"../styles/StyledMovieThumb\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => (\r\n  <StyledMovieThumb>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"moviethumb\" />\r\n    )}\r\n  </StyledMovieThumb>\r\n);\r\n\r\n//proptypes to valide props\r\nMovieThumb.propTypes = {\r\n  image:PropTypes.string,\r\n  movieId:PropTypes.number,\r\n  clickable:PropTypes.bool,\r\n}\r\nexport default MovieThumb;\r\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport {\r\n  StyledSearchBar,\r\n  StyledSearchBarContent,\r\n} from \"../styles/StyledSearchBar\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchBar = ({ callback }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const timeOut = useRef(null);\r\n  const handleSearch = (event) => {\r\n    console.log(event.target.value);\r\n    const { value } = event.target;\r\n\r\n    clearTimeout(timeOut.current);\r\n    setState(value);\r\n    timeOut.current = setTimeout(() => {\r\n      callback(value);\r\n    }, 600);\r\n  };\r\n\r\n  return (\r\n    <StyledSearchBar>\r\n      <StyledSearchBarContent>\r\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search movie\"\r\n          onChange={handleSearch}\r\n          value={state}\r\n        />\r\n      </StyledSearchBarContent>\r\n    </StyledSearchBar>\r\n  );\r\n};\r\n\r\n//propypes to validate props\r\nSearchBar.propTypes = {\r\n  callback:PropTypes.func\r\n}\r\n\r\nexport default SearchBar;\r\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { StyledSpinner } from \"../styles/StyledSpinner\";\r\n\r\nconst Spinner = () => <StyledSpinner></StyledSpinner>;\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\n//import api config info\r\nimport {\r\n  POPULAR_BASE_URL,\r\n  SEARCH_BASE_URL,\r\n  IMAGE_URL,\r\n  POSTER_SIZE,\r\n  BACKDROP_SIZE,\r\n} from \"../config\";\r\n\r\n//import all components for the home page\r\nimport Grid from \"./elements/Grid\";\r\nimport Header from \"./elements/Header\";\r\nimport HeroImage from \"./elements/HeroImage\";\r\nimport LoadMoreBtn from \"./elements/LoadMoreBtn\";\r\nimport MovieThumb from \"./elements/MovieThumb\";\r\nimport SearchBar from \"./elements/SearchBar\";\r\nimport Spinner from \"./elements/Spinner\";\r\n\r\n\r\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\r\n\r\nimport NoImage from \"./images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n  const [\r\n    {\r\n      state: { movies, currentPage, totalPages, heroImage },\r\n      loading,\r\n      error,\r\n    },\r\n    fetchMovies,\r\n  ] = useHomeFetch(searchItem);\r\n\r\n  const searchMovies = (search) => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n    setSearchItem(search);\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  const loadMoreMovies = () => {\r\n    const afterSearch = `${SEARCH_BASE_URL}${searchItem}&page=${\r\n      currentPage + 1\r\n    }`;\r\n    const popularEnd = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n    const end = searchItem ? afterSearch : popularEnd;\r\n\r\n    fetchMovies(end);\r\n  };\r\n\r\n  if (error) return <div>Something went wrong</div>;\r\n  if (!movies[0]) return <Spinner />;\r\n  return (\r\n    <>\r\n      {!searchItem && (\r\n        <HeroImage\r\n          image={`${IMAGE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n          title={heroImage.original_title}\r\n          text={heroImage.overview}\r\n        />\r\n      )}\r\n      <SearchBar callback={searchMovies} />\r\n      <Grid header={searchItem ? \"Search Result\" : \"Trending Movies\"}>\r\n        {movies.map((movie) => (\r\n          <MovieThumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n\r\n      {loading && <Spinner />}\r\n      {currentPage < totalPages && !loading && (\r\n        <LoadMoreBtn text=\"Load more\" callback={loadMoreMovies} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport { POPULAR_BASE_URL } from \"../../config\";\r\n\r\nexport const useHomeFetch = (searchItem) => {\r\n  const [state, setState] = useState({ movies: [] });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovies = async (endpoint) => {\r\n    setError(false);\r\n    setLoading(true);\r\n    const isLoadMore = endpoint.search(\"page\");\r\n\r\n    try {\r\n      const res = await (await fetch(endpoint)).json();\r\n\r\n      setState((prev) => ({\r\n        ...prev,\r\n\r\n        movies:\r\n          isLoadMore !== -1\r\n            ? [...prev.movies, ...res.results]\r\n            : [...res.results],\r\n\r\n        heroImage: prev.heroImage || res.results[1],\r\n        currentPage: res.page,\r\n        totalPages: res.total_pages,\r\n      }));\r\n    } catch (err) {\r\n      setError(true);\r\n      console.log(err);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.homeState) {\r\n      setState(JSON.parse(sessionStorage.homeState));\r\n      setLoading(false);\r\n    } else {\r\n      fetchMovies(POPULAR_BASE_URL);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!searchItem) {\r\n      sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n    }\r\n  }, [searchItem, state]);\r\n\r\n  return [{ state, loading, error }, fetchMovies];\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport { StyledNavigation } from \"../styles/StyledNavigation\";\r\nimport PropTypes from 'prop-types'\r\nconst Navigation = ({ movie }) => {\r\n  return (\r\n    <StyledNavigation>\r\n      <div className=\"navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>|</p>\r\n        <p>{movie}</p>\r\n      </div>\r\n    </StyledNavigation>\r\n  );\r\n};\r\n\r\n//proptypes to validate props\r\nNavigation.propTypes = {\r\n  movie:PropTypes.string,\r\n}\r\nexport default Navigation;\r\n","import styled from 'styled-components';\nimport { IMAGE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from \"react\";\r\nimport NoImage from \"../images/no_image.jpg\";\r\nimport { IMAGE_URL, POSTER_SIZE } from \"../../config\";\r\nimport MovieThumb from \"./MovieThumb\";\r\nimport { StyledMovieInfo } from \"../styles/StyledMovieInfo\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n    <div className=\"movieinfo-content\">\r\n      <div className=\"movieinfo-thumb\">\r\n        <MovieThumb\r\n          image={\r\n            movie.poster_path\r\n              ? `${IMAGE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n              : NoImage\r\n          }\r\n          clickable={false}\r\n        />\r\n      </div>\r\n      <div className=\"movieinfo-text\">\r\n        <h1>{movie.title}</h1>\r\n        <h3>Plot summary</h3>\r\n        <p>{movie.overview}</p>\r\n\r\n        <div className=\"rating-director\">\r\n          <div>\r\n            <h3>IMBD Rating</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>Director{movie.directors.length > 1 ? \"s\" : \"\"}</h3>\r\n            {movie.directors.map((e) => (\r\n              <p key={e.credit_id}>{e.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </StyledMovieInfo>\r\n);\r\n\r\n//prop types to validate props\r\nMovieInfo.propTypes = {\r\n  movie:PropTypes.object,\r\n  directors:PropTypes.array,\r\n}\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-GB\", {\n    style: \"currency\",\n    currency: \"GBP\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\nimport { StyledMovieInfoBar } from \"../styles/StyledMovieInfoBar\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <StyledMovieInfoBar>\r\n    <div className=\"movieinfobar-content\">\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">Run time:{calcTime(time)}</span>\r\n      </div>\r\n\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">Budget:{convertMoney(budget)}</span>\r\n      </div>\r\n\r\n      <div className=\"movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n        <span className=\"movieinfobar-info\">\r\n          Revenue:{convertMoney(revenue)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </StyledMovieInfoBar>\r\n);\r\n\r\n//proptypes to validate props\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\n\nexport const StyledActor = styled.div`\n  font-family: \"Abel\", sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NoImage from \"../images/no_image.jpg\";\r\nimport { IMAGE_URL, POSTER_SIZE } from \"../../config\";\r\nimport { StyledActor } from \"../styles/StyledActor\";\r\n\r\nconst Actor = ({ actor }) => (\r\n  <StyledActor>\r\n    <img\r\n      src={\r\n        actor.profile_path\r\n          ? `${IMAGE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n          : NoImage\r\n      }\r\n      alt=\"actorthumb\"\r\n    />\r\n    <span className=\"actor-name\">{actor.name}</span>\r\n    <span className=\"actor-character\">{actor.character}</span>\r\n  </StyledActor>\r\n);\r\n\r\n//prop types to validate props\r\nActor.propTypes = {\r\n  actor: PropTypes.object,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\n\r\nimport Navigation from \"./elements/Navigation\";\r\nimport MovieInfo from \"./elements/MovieInfo\";\r\nimport MovieInfoBar from \"./elements/MovieInfoBar\";\r\nimport Actor from \"./elements/Actor\";\r\nimport Grid from \"./elements/Grid\";\r\nimport Spinner from \"./elements/Spinner\";\r\nimport { useMovieFetch } from \"./hooks/useMovieFetch\";\r\n\r\nconst Movie = ({ movieId }) => {\r\n  const [movie, loading, error] = useMovieFetch(movieId);\r\n  \r\n\r\n  if (error) return <div>Something went wrong</div>;\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <>\r\n      <Navigation movie={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor key={actor.credit_id} actor={actor} />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    try {\r\n      const end = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n      const res = await (await fetch(end)).json();\r\n\r\n      const creditsEnd = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n      const creditRes = await (await fetch(creditsEnd)).json();\r\n\r\n      const directors = creditRes.crew.filter(\r\n        (member) => member.job === \"Director\"\r\n      );\r\n\r\n      setState({\r\n        ...res,\r\n        actors: creditRes.cast,\r\n        directors,\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage[movieId]) {\r\n      setState(JSON.parse(localStorage[movieId]));\r\n      setLoading(false)\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [fetchData, movieId]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n  return [state, loading, error];\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div>Nothing found here</div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport Header from \"./elements/Header\";\nimport Home from \"./Home\";\nimport { GlobalStyle } from \"./styles/GlobalStyle\";\nimport Movie from \"./Movie\";\nimport NotFound from \"./NotFound\";\n\nconst App = () => (\n  <>\n    <Header />\n    <Router>\n      <Home path=\"/\" />\n      <Movie path=\"/:movieId\" />\n      <NotFound default />\n    </Router>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}